// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: control.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MACAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *MACAddress) Reset() {
	*x = MACAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MACAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MACAddress) ProtoMessage() {}

func (x *MACAddress) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MACAddress.ProtoReflect.Descriptor instead.
func (*MACAddress) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{0}
}

func (x *MACAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Lease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MACAddress    string               `protobuf:"bytes,1,opt,name=MACAddress,proto3" json:"MACAddress,omitempty"`
	IPAddress     string               `protobuf:"bytes,2,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
	LeaseEnd      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=LeaseEnd,proto3" json:"LeaseEnd,omitempty"`
	Dynamic       bool                 `protobuf:"varint,4,opt,name=Dynamic,proto3" json:"Dynamic,omitempty"` // ignored for SetLease
	Persistent    bool                 `protobuf:"varint,5,opt,name=Persistent,proto3" json:"Persistent,omitempty"`
	LeaseGraceEnd *timestamp.Timestamp `protobuf:"bytes,6,opt,name=LeaseGraceEnd,proto3" json:"LeaseGraceEnd,omitempty"`
}

func (x *Lease) Reset() {
	*x = Lease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{1}
}

func (x *Lease) GetMACAddress() string {
	if x != nil {
		return x.MACAddress
	}
	return ""
}

func (x *Lease) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *Lease) GetLeaseEnd() *timestamp.Timestamp {
	if x != nil {
		return x.LeaseEnd
	}
	return nil
}

func (x *Lease) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *Lease) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *Lease) GetLeaseGraceEnd() *timestamp.Timestamp {
	if x != nil {
		return x.LeaseGraceEnd
	}
	return nil
}

type Leases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Lease `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *Leases) Reset() {
	*x = Leases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leases) ProtoMessage() {}

func (x *Leases) ProtoReflect() protoreflect.Message {
	mi := &file_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leases.ProtoReflect.Descriptor instead.
func (*Leases) Descriptor() ([]byte, []int) {
	return file_control_proto_rawDescGZIP(), []int{2}
}

func (x *Leases) GetList() []*Lease {
	if x != nil {
		return x.List
	}
	return nil
}

var File_control_proto protoreflect.FileDescriptor

var file_control_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0a, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xf9, 0x01, 0x0a,
	0x05, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x41, 0x43, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x47,
	0x72, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x47, 0x72, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x22, 0x2a, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x32, 0xe4, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x41,
	0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_control_proto_rawDescOnce sync.Once
	file_control_proto_rawDescData = file_control_proto_rawDesc
)

func file_control_proto_rawDescGZIP() []byte {
	file_control_proto_rawDescOnce.Do(func() {
		file_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_control_proto_rawDescData)
	})
	return file_control_proto_rawDescData
}

var file_control_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_control_proto_goTypes = []interface{}{
	(*MACAddress)(nil),          // 0: proto.MACAddress
	(*Lease)(nil),               // 1: proto.Lease
	(*Leases)(nil),              // 2: proto.Leases
	(*timestamp.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*empty.Empty)(nil),         // 4: google.protobuf.Empty
}
var file_control_proto_depIdxs = []int32{
	3, // 0: proto.Lease.LeaseEnd:type_name -> google.protobuf.Timestamp
	3, // 1: proto.Lease.LeaseGraceEnd:type_name -> google.protobuf.Timestamp
	1, // 2: proto.Leases.List:type_name -> proto.Lease
	1, // 3: proto.LeaseControl.SetLease:input_type -> proto.Lease
	0, // 4: proto.LeaseControl.GetLease:input_type -> proto.MACAddress
	4, // 5: proto.LeaseControl.ListLeases:input_type -> google.protobuf.Empty
	0, // 6: proto.LeaseControl.RemoveLease:input_type -> proto.MACAddress
	4, // 7: proto.LeaseControl.SetLease:output_type -> google.protobuf.Empty
	1, // 8: proto.LeaseControl.GetLease:output_type -> proto.Lease
	2, // 9: proto.LeaseControl.ListLeases:output_type -> proto.Leases
	4, // 10: proto.LeaseControl.RemoveLease:output_type -> google.protobuf.Empty
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_control_proto_init() }
func file_control_proto_init() {
	if File_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MACAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_control_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_control_proto_goTypes,
		DependencyIndexes: file_control_proto_depIdxs,
		MessageInfos:      file_control_proto_msgTypes,
	}.Build()
	File_control_proto = out.File
	file_control_proto_rawDesc = nil
	file_control_proto_goTypes = nil
	file_control_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LeaseControlClient is the client API for LeaseControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LeaseControlClient interface {
	SetLease(ctx context.Context, in *Lease, opts ...grpc.CallOption) (*empty.Empty, error)
	GetLease(ctx context.Context, in *MACAddress, opts ...grpc.CallOption) (*Lease, error)
	ListLeases(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Leases, error)
	RemoveLease(ctx context.Context, in *MACAddress, opts ...grpc.CallOption) (*empty.Empty, error)
}

type leaseControlClient struct {
	cc grpc.ClientConnInterface
}

func NewLeaseControlClient(cc grpc.ClientConnInterface) LeaseControlClient {
	return &leaseControlClient{cc}
}

func (c *leaseControlClient) SetLease(ctx context.Context, in *Lease, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.LeaseControl/SetLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseControlClient) GetLease(ctx context.Context, in *MACAddress, opts ...grpc.CallOption) (*Lease, error) {
	out := new(Lease)
	err := c.cc.Invoke(ctx, "/proto.LeaseControl/GetLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseControlClient) ListLeases(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Leases, error) {
	out := new(Leases)
	err := c.cc.Invoke(ctx, "/proto.LeaseControl/ListLeases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseControlClient) RemoveLease(ctx context.Context, in *MACAddress, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.LeaseControl/RemoveLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LeaseControlServer is the server API for LeaseControl service.
type LeaseControlServer interface {
	SetLease(context.Context, *Lease) (*empty.Empty, error)
	GetLease(context.Context, *MACAddress) (*Lease, error)
	ListLeases(context.Context, *empty.Empty) (*Leases, error)
	RemoveLease(context.Context, *MACAddress) (*empty.Empty, error)
}

// UnimplementedLeaseControlServer can be embedded to have forward compatible implementations.
type UnimplementedLeaseControlServer struct {
}

func (*UnimplementedLeaseControlServer) SetLease(context.Context, *Lease) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLease not implemented")
}
func (*UnimplementedLeaseControlServer) GetLease(context.Context, *MACAddress) (*Lease, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLease not implemented")
}
func (*UnimplementedLeaseControlServer) ListLeases(context.Context, *empty.Empty) (*Leases, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLeases not implemented")
}
func (*UnimplementedLeaseControlServer) RemoveLease(context.Context, *MACAddress) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveLease not implemented")
}

func RegisterLeaseControlServer(s *grpc.Server, srv LeaseControlServer) {
	s.RegisterService(&_LeaseControl_serviceDesc, srv)
}

func _LeaseControl_SetLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Lease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseControlServer).SetLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LeaseControl/SetLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseControlServer).SetLease(ctx, req.(*Lease))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseControl_GetLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MACAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseControlServer).GetLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LeaseControl/GetLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseControlServer).GetLease(ctx, req.(*MACAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseControl_ListLeases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseControlServer).ListLeases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LeaseControl/ListLeases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseControlServer).ListLeases(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseControl_RemoveLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MACAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseControlServer).RemoveLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LeaseControl/RemoveLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseControlServer).RemoveLease(ctx, req.(*MACAddress))
	}
	return interceptor(ctx, in, info, handler)
}

var _LeaseControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.LeaseControl",
	HandlerType: (*LeaseControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetLease",
			Handler:    _LeaseControl_SetLease_Handler,
		},
		{
			MethodName: "GetLease",
			Handler:    _LeaseControl_GetLease_Handler,
		},
		{
			MethodName: "ListLeases",
			Handler:    _LeaseControl_ListLeases_Handler,
		},
		{
			MethodName: "RemoveLease",
			Handler:    _LeaseControl_RemoveLease_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control.proto",
}
